// $ANTLR 2.7.5 (20131102): "booel.g" -> "BooExpressionLexer.cs"$

namespace Boo.Lang.Parser
{
	public class BooExpressionLexerTokenTypes
	{
		public const int EOF = 1;
		public const int NULL_TREE_LOOKAHEAD = 3;
		public const int INDENT = 4;
		public const int DEDENT = 5;
		public const int ELIST = 6;
		public const int DLIST = 7;
		public const int ESEPARATOR = 8;
		public const int EOL = 9;
		public const int ASSEMBLY_ATTRIBUTE_BEGIN = 10;
		public const int MODULE_ATTRIBUTE_BEGIN = 11;
		public const int ABSTRACT = 12;
		public const int AND = 13;
		public const int AS = 14;
		public const int BREAK = 15;
		public const int CONTINUE = 16;
		public const int CALLABLE = 17;
		public const int CAST = 18;
		public const int CHAR = 19;
		public const int CLASS = 20;
		public const int CONSTRUCTOR = 21;
		public const int DEF = 22;
		public const int DESTRUCTOR = 23;
		public const int DO = 24;
		public const int ELIF = 25;
		public const int ELSE = 26;
		public const int END = 27;
		public const int ENSURE = 28;
		public const int ENUM = 29;
		public const int EVENT = 30;
		public const int EXCEPT = 31;
		public const int FAILURE = 32;
		public const int FINAL = 33;
		public const int FROM = 34;
		public const int FOR = 35;
		public const int FALSE = 36;
		public const int GET = 37;
		public const int GOTO = 38;
		public const int IMPORT = 39;
		public const int INTERFACE = 40;
		public const int INTERNAL = 41;
		public const int IS = 42;
		public const int ISA = 43;
		public const int IF = 44;
		public const int IN = 45;
		public const int NAMESPACE = 46;
		public const int NEW = 47;
		public const int NOT = 48;
		public const int NULL = 49;
		public const int OF = 50;
		public const int OR = 51;
		public const int OVERRIDE = 52;
		public const int PASS = 53;
		public const int PARTIAL = 54;
		public const int PUBLIC = 55;
		public const int PROTECTED = 56;
		public const int PRIVATE = 57;
		public const int RAISE = 58;
		public const int REF = 59;
		public const int RETURN = 60;
		public const int SET = 61;
		public const int SELF = 62;
		public const int SUPER = 63;
		public const int STATIC = 64;
		public const int STRUCT = 65;
		public const int THEN = 66;
		public const int TRY = 67;
		public const int TRANSIENT = 68;
		public const int TRUE = 69;
		public const int TYPEOF = 70;
		public const int UNLESS = 71;
		public const int VIRTUAL = 72;
		public const int WHILE = 73;
		public const int YIELD = 74;
		public const int TRIPLE_QUOTED_STRING = 75;
		public const int EOS = 76;
		public const int LPAREN = 77;
		public const int RPAREN = 78;
		public const int DOUBLE_QUOTED_STRING = 79;
		public const int SINGLE_QUOTED_STRING = 80;
		public const int ID = 81;
		public const int MULTIPLY = 82;
		public const int LBRACK = 83;
		public const int RBRACK = 84;
		public const int ASSIGN = 85;
		public const int COMMA = 86;
		public const int SPLICE_BEGIN = 87;
		public const int DOT = 88;
		public const int COLON = 89;
		public const int NULLABLE_SUFFIX = 90;
		public const int EXPONENTIATION = 91;
		public const int BITWISE_OR = 92;
		public const int LBRACE = 93;
		public const int RBRACE = 94;
		public const int QQ_BEGIN = 95;
		public const int QQ_END = 96;
		public const int INPLACE_BITWISE_OR = 97;
		public const int INPLACE_EXCLUSIVE_OR = 98;
		public const int INPLACE_BITWISE_AND = 99;
		public const int INPLACE_SHIFT_LEFT = 100;
		public const int INPLACE_SHIFT_RIGHT = 101;
		public const int CMP_OPERATOR = 102;
		public const int GREATER_THAN = 103;
		public const int LESS_THAN = 104;
		public const int ADD = 105;
		public const int SUBTRACT = 106;
		public const int EXCLUSIVE_OR = 107;
		public const int DIVISION = 108;
		public const int MODULUS = 109;
		public const int BITWISE_AND = 110;
		public const int SHIFT_LEFT = 111;
		public const int SHIFT_RIGHT = 112;
		public const int LONG = 113;
		public const int INCREMENT = 114;
		public const int DECREMENT = 115;
		public const int ONES_COMPLEMENT = 116;
		public const int INT = 117;
		public const int BACKTICK_QUOTED_STRING = 118;
		public const int RE_LITERAL = 119;
		public const int DOUBLE = 120;
		public const int FLOAT = 121;
		public const int TIMESPAN = 122;
		public const int ID_SUFFIX = 123;
		public const int LINE_CONTINUATION = 124;
		public const int INTERPOLATED_EXPRESSION = 125;
		public const int INTERPOLATED_REFERENCE = 126;
		public const int SL_COMMENT = 127;
		public const int ML_COMMENT = 128;
		public const int WS = 129;
		public const int X_RE_LITERAL = 130;
		public const int NEWLINE = 131;
		public const int DQS_ESC = 132;
		public const int SQS_ESC = 133;
		public const int SESC = 134;
		public const int RE_CHAR = 135;
		public const int X_RE_CHAR = 136;
		public const int RE_OPTIONS = 137;
		public const int RE_ESC = 138;
		public const int DIGIT_GROUP = 139;
		public const int REVERSE_DIGIT_GROUP = 140;
		public const int AT_SYMBOL = 141;
		public const int ID_LETTER = 142;
		public const int DIGIT = 143;
		public const int HEXDIGIT = 144;
		
	}
}
